#!/usr/bin/env python

import rospy
from std_msgs.msg import String

import os
import time
import pygame

# Change directory to music file directory
try:
    os.chdir(os.path.dirname(__file__))
    os.chdir("../media")
except:
    pass

class SemanticPoseSounder():
    def __init__(self):
        # Init Pygame
        pygame.init()
        pygame.mixer.pre_init(frequency=44100, size=-16, channels=2, buffer=4096)

        # Init ROS
        rospy.init_node('semantic_pose_sounder')

        self.subscriber = rospy.Subscriber("location", String, self.location_callback)

        # Init Parameters
        self.playback_delay = rospy.get_param('playback_delay')

        # Load trigger-sound mappings
        self.trigger_mappings = rospy.get_param('trigger_mappings')

        # Load sounder helper variables
        self.last_playback_time = 0
        self.last_location = ""

        rospy.spin()

    def location_callback(self, msg):
        ''' Trigger sound on entering new location '''

        if time.time() - self.last_playback_time >= self.playback_delay:
            if msg.data in self.trigger_mappings.keys():
                if self.last_location != msg.data:
                    try:
                        pygame.mixer.music.load(self.trigger_mappings[msg.data])
                        pygame.mixer.music.play()

                        self.last_playback_time = time.time()
                        self.last_location = msg.data

                    except:
                        rospy.loginfo("UNABLE TO PLAY: " + str(self.trigger_mappings[msg.data]))
                        rospy.loginfo("AT LOCATION: " + str(msg.data))

            else:
                self.last_location = msg.data

if __name__ == '__main__':
    try:
        SemanticPoseSounder()
    except rospy.ROSInterruptException:
        pygame.quit()
        sys.exit()
